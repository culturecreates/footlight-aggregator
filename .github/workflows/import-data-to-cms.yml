name: Import data to CMS

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      cms_referer_header:
        required: true
        type: string
      aggregator_username:
        required: true
        type: string
      source_url:
        required: true
        type: string
      footlight_base_url:
        required: true
        type: string
      footlight_calendar_id:
        required: true
        type: string
      batch_size:
        required: false
        type: number
        default: 5
      mapping_file_url:
        required: false
        type: string
      query_version:
        required: false
        type: string
        default: "V3"
    secrets:
      aggregator_password:
        required: true
      datadog_token:
        required: true
      AWS_SES_ACCESS_KEY:
        required: true
      AWS_SES_SECRET_ACCESS_KEY:
        required: true
jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm install
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_DATA_DOG_CLIENT_TOKEN: ${{ secrets.datadog_token }}
          envkey_ENABLING_LOG_TO_DATA_DOG: true
          envkey_CMS_REFERER_HEADER: ${{ vars.CMS_REFERER_HEADER }}
          file_name: .env
          fail_on_empty: false
      - name: Build Footlight Aggregator
        run: npm run build
      - name: Import entities to footlight
        run: |
          node ./dist/main-commander.js  \
            import:entities -u ${{inputs.aggregator_username}} -p ${{secrets.aggregator_password}} \
            -s ${{inputs.source_url}} \
            -i ${{inputs.footlight_base_url}} \
            -c ${{inputs.footlight_calendar_id}} \
            -b ${{inputs.batch_size}} \
            -m ${{inputs.mapping_file_url}} \
            -q ${{inputs.query_version}}

  send-failure-notification:
    runs-on: ubuntu-latest
    needs: run
    if: failure()
    steps:
    - name: Send email via Amazon SES
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_SES_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SES_SECRET_ACCESS_KEY }}
        aws-region: ca-central-1
    - name: Send email
      run: |
        aws ses send-email \
          --from ${{vars.FOOTLIGHT_INFO_EMAIL}} \
          --destination "ToAddresses=${{ vars.MEDIUM_ALERTS_EMAIL }}" \
          --message "Subject={Data='Medium Alert - ${{github.repository}} [${{github.workflow}}]'},Body={Text={Data='${{github.workflow}} in ${{github.repository}} failed.'}}"
